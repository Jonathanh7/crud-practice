{"ast":null,"code":"var _jsxFileName = \"/Users/jonathanhernandez/work4/mongodb-express-react/client/src/components/routes/ItemEdit.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport ItemForm from '../shared/ItemForm';\nimport Layout from '../shared/Layout';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ItemEdit = props => {\n  _s();\n\n  const [item, setItem] = useState({\n    title: '',\n    link: ''\n  });\n  const [updated, setUpdated] = useState(false);\n\n  const fetchUpdate = async props => {\n    try {\n      const response = await axios(`http://localhost:3000/api/items/${props.match.params.id}`);\n      setItem(response.data);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const handleChange = event => {\n    const updatedField = {\n      [event.target.name]: event.target.name\n    };\n    const editedItem = Object.assign(item, updatedField);\n  };\n\n  useEffect(async () => {\n    fetchUpdate();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(ItemForm, {\n      item: item,\n      handleChange: handleChange,\n      handleSubmit: handleSubmit,\n      cancelPath: `/items/${props.match.params.id}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ItemEdit, \"NYpPI4BTuYLFvT+Pr7qIuHrU7kk=\");\n\n_c = ItemEdit;\nexport default ItemEdit;\n\nvar _c;\n\n$RefreshReg$(_c, \"ItemEdit\");","map":{"version":3,"sources":["/Users/jonathanhernandez/work4/mongodb-express-react/client/src/components/routes/ItemEdit.js"],"names":["useState","useEffect","axios","ItemForm","Layout","ItemEdit","props","item","setItem","title","link","updated","setUpdated","fetchUpdate","response","match","params","id","data","err","console","error","handleChange","event","updatedField","target","name","editedItem","Object","assign","handleSubmit"],"mappings":";;;AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AAC1B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC;AAC/BS,IAAAA,KAAK,EAAE,EADwB;AAE/BC,IAAAA,IAAI,EAAE;AAFyB,GAAD,CAAhC;AAIA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,KAAD,CAAtC;;AAGA,QAAMa,WAAW,GAAG,MAAOP,KAAP,IAAiB;AACnC,QAAI;AACF,YAAMQ,QAAQ,GAAG,MAAMZ,KAAK,CAAE,mCAAkCI,KAAK,CAACS,KAAN,CAAYC,MAAZ,CAAmBC,EAAG,EAA1D,CAA5B;AACAT,MAAAA,OAAO,CAACM,QAAQ,CAACI,IAAV,CAAP;AACD,KAHD,CAGE,OAAOC,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACH;AACA,GAPD;;AAQA,QAAMG,YAAY,GAAGC,KAAK,IAAI;AAC5B,UAAMC,YAAY,GAAG;AAAE,OAACD,KAAK,CAACE,MAAN,CAAaC,IAAd,GAAqBH,KAAK,CAACE,MAAN,CAAaC;AAApC,KAArB;AAEA,UAAMC,UAAU,GAAGC,MAAM,CAACC,MAAP,CAActB,IAAd,EAAoBiB,YAApB,CAAnB;AACD,GAJD;;AAMAvB,EAAAA,SAAS,CAAC,YAAY;AACpBY,IAAAA,WAAW;AACZ,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE,QAAC,MAAD;AAAA,2BACE,QAAC,QAAD;AACE,MAAA,IAAI,EAAEN,IADR;AAEE,MAAA,YAAY,EAAEe,YAFhB;AAGE,MAAA,YAAY,EAAEQ,YAHhB;AAIE,MAAA,UAAU,EAAG,UAASxB,KAAK,CAACS,KAAN,CAAYC,MAAZ,CAAmBC,EAAG;AAJ9C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CArCD;;GAAMZ,Q;;KAAAA,Q;AAuCN,eAAeA,QAAf","sourcesContent":["import {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport ItemForm from '../shared/ItemForm'\nimport Layout from '../shared/Layout'\n\nconst ItemEdit = (props) => {\n  const [item, setItem] = useState({\n    title: '',\n    link: ''\n  })\n  const [updated, setUpdated] = useState(false)\n\n\n  const fetchUpdate = async (props) => {\n    try {\n      const response = await axios(`http://localhost:3000/api/items/${props.match.params.id}`)\n      setItem(response.data)\n    } catch (err) {\n      console.error(err)\n  }\n  }\n  const handleChange = event => {\n    const updatedField = { [event.target.name]: event.target.name }\n    \n    const editedItem = Object.assign(item, updatedField)\n  }\n\n  useEffect(async () => {\n    fetchUpdate()\n  }, [])\n\n  return (\n    <Layout>\n      <ItemForm\n        item={item}\n        handleChange={handleChange}\n        handleSubmit={handleSubmit}\n        cancelPath={`/items/${props.match.params.id}`}\n      />\n      \n</Layout>\n  )\n}\n\nexport default ItemEdit\n"]},"metadata":{},"sourceType":"module"}